// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  people    Person[]
  companies Company[]
  threads   Thread[]
  messages  Message[]
  notes     Note[]
}

model Person {
  id        Int       @id @default(autoincrement())
  owner     User      @relation(fields: [ownerId], references: [id])
  ownerId   Int
  company   Company?  @relation(fields: [companyId], references: [id])
  companyId Int?
  name      String?
  email     String?
  phone     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  isDeleted Boolean   @default(false)
  threads   Thread[]
  messages  Message[]
  notes     Note[]
}

model Company {
  id        Int      @id @default(autoincrement())
  owner     User     @relation(fields: [ownerId], references: [id])
  ownerId   Int
  name      String
  domain    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isDeleted Boolean  @default(false)
  people    Person[]
}

model Thread {
  id        Int       @id @default(autoincrement())
  owner     User      @relation(fields: [ownerId], references: [id])
  ownerId   Int
  person    Person    @relation(fields: [personId], references: [id])
  personId  Int
  messages  Message[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Message {
  id        Int      @id @default(autoincrement())
  thread    Thread   @relation(fields: [threadId], references: [id])
  threadId  Int
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  person    Person?  @relation(fields: [personId], references: [id])
  personId  Int?
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Note {
  id        Int      @id @default(autoincrement())
  owner     User     @relation(fields: [ownerId], references: [id])
  ownerId   Int
  person    Person   @relation(fields: [personId], references: [id])
  personId  Int
  title     String
  body      String?
  isDeleted Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
